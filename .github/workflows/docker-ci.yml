name: Bump Version, Build & Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  bump-build-push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Ensure clean working directory
      - name: Ensure clean working directory
        run: |
          git reset --hard
          git clean -fd
          git status

      # Set Git user identity
      - name: Set Git user identity
        run: |
          git config --global user.email "contact@andyfarthing.com"
          git config --global user.name "Andy Farthing"

      # Set up Node.js and install dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      # Force bump version and create git commit
      - name: Force bump version and create git commit
        run: |
          # Bump version patch and store the new version in an environment variable
          NEW_VERSION=$(npm version patch --no-git-tag-version -m "ci: Bump version to %s")
          echo "VERSION=$NEW_VERSION" >> $GITHUB_ENV

          # Add the changes to Git
          git add package.json package-lock.json

          # Create commit and push changes
          git commit -m "ci: Bump version"
          git push origin master --follow-tags  # Push commit and tags to the remote repository

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build Docker image and push it
      - name: Build and Push Docker image
        run: |
          # Get the repository name from the GitHub context and convert it to lowercase
          REPO_NAME=$(echo "${GITHUB_REPOSITORY#*/}" | tr '[:upper:]' '[:lower:]')

          # Build Docker image and tag it with both 'latest' and the version tag
          docker build -t ghcr.io/andyfarthing/andyfarthing/$REPO_NAME:latest -t ghcr.io/andyfarthing/andyfarthing/$REPO_NAME:${{ env.VERSION }} .

          # Push the Docker image to GitHub Container Registry
          docker push ghcr.io/andyfarthing/andyfarthing/$REPO_NAME:latest
          docker push ghcr.io/andyfarthing/andyfarthing/$REPO_NAME:${{ env.VERSION }}

      # Push updated version back to the repository
      - name: Push updated version
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add package.json
          git commit -m "ci: Bump version to ${{ env.VERSION }}"
          git push origin master
